1) 2021/11/3~ 11/7일 사이에 판매된 모든 
	도서의 도서명, 출판사명, 도서가격, 판매가격, 판매일을 출력하기
	->두개의 테이블로부터 원하는 데이터를 조회하기 위해서 : join 사용하기 


	select bookname, publisher, price, saleprice, orderdate
	from book, orders
	where book.bookid = orders. bookid and
	orderdate between '2021/11/03' and '2021/11/07';
	



=>Join을 하기 위해서 조회하고자 하는 데이터(컬럼)이 두 개이상의
테이블에 있다면 join을 이용함
 **join하는 방법 
	 select 컬럼1, 컬럼2,... 
	 from 테이블1, 테이블2...
	 where join식 and  
	 조건식 1, 조건식2...
=> 조인식은 두 개의 테이블에 공통으로 들어가는 컬럼을 조건식으로 표현하는 것

----------------------

1) 2021/11/3~ 11/7일 사이에 판매된 모든 
	도서의 도서번호, 도서명, 출판사명, 도서가격, 판매가격, 판매일을 출력하기
	->두개의 테이블로부터 원하는 데이터를 조회하기 위해서 : join 사용하기 
	
	select bookid, bookname, publisher, price, saleprice, orderdate
	from book, orders
	where book.bookid = orders.bookid and
	orderdate between '2021/11/03' and '2021/11/07';
	
	
	->1행에 오류:
	  ORA-00918: 열의 정의가 애매합니다
	  bookid는 두 테이블에 모두 존재함 -> 둘 중에 하나를 정해줘야해 

	
	======>
	select book.bookid, bookname, publisher, price, saleprice, orderdate
	from book, orders
	where book.bookid = orders.bookid and
	orderdate between '2021/11/03' and '2021/11/07';
	
	
	
	-----
	2) 테이블이름에 애칭을 줄 수 있음
	2021/11/3~ 11/7일 사이에 판매된 모든 
	도서의 도서명, 출판사명, 도서가격, 판매가격, 판매일을 출력하기
	->두개의 테이블로부터 원하는 데이터를 조회하기 위해서 : join 사용하기 
	
	select b.bookid, bookname, publisher, price, saleprice, orderdate
	from book b, orders o
	where b.bookid = o.bookid and
	orderdate between '2021/11/03' and '2021/11/07';
	

	
	
	---------
	3) 박지성 고객이 주문한 도서의 정보에 대해서 고객번호, 고객명, 도서명의 출판사명,
	도서가격, 구매금액, 구매일을 출력하기
	단 도서가격이 높은 순으로 출력함 (join)
	
	select c.custid, name, bookname, publisher, price, saleprice, orderdate
	from customer c , book b, orders o
	where 
	c.custid = o.custid and
	b.bookid = o.bookid and
	name = '박지성 '
	order by price desc; 
	
	
	
	----------------------
	action ="전송받아서 처리하는 문서 :자기이름", method ="는 보통 post"
	고객이름을 입력하시오==> <input type ="text" name="name " name의 이름
	<input type =" submit" //제출하겠다-> 단추를 만드는 것 value 단추의 이름>
			

		request.setCharacterEncoding("euc-kr"); => 한글설정
		request.getParameter("name")  -> name에 써진 글자를 읽어오는 기능
	
	
	4)이상미디어의 도서를 구매한 모든 고객의 정보를 출력하기
	고객번호, 고객이름, 도서명, 도서가격, 구매가격, 구매일
	단 구매일을 최근순으로 출력
	구매일이 동일할 땐 구매가격이 높은 순
	
	select c.custid, name, bookname, price, saleprice, orderdate
	from customer c , book b, orders o
	where 
	c.custid = o.custid and
	b.bookid = o.bookid and
	publisher ='이상미디어'
	order by orderdate desc, price desc;
	
	
	5)이상미디어, 대한미디어나 굿스포츠에서 출간한 도서중에
	가격 10000~30000원 사이의 도서를 
	2021.11.03~2021.11.07 사이에 구매한 고객의 정보를 출력 
		고객번호, 고객이름, 도서명, 도서가격, 구매가격, 구매일
		단, 출판사순으로 동일시 도서명 순
		
	select c.custid, name, bookname, price, saleprice, orderdate
	from customer c , book b, orders o
	where 
	c.custid = o.custid and
	b.bookid= o.bookid and
	publisher in('이상미디어','대한미디어','굿스포츠')	 
	order by publisher, bookname;
	
	6)축구관련 도서의 고객정보
	고객번호, 고객이름, 도서명, 도서가격, 구매가격, 구매일
	단 출판사 순으로 출력
	
	select o.custid, name, bookname, price, saleprice, orderdate
	from book b, customer c, orders o
	where 
	c.custid = o.custid and
	b.bookid= o.bookid and
	bookname like '%축구%'
	order by publisher;
	
	7)대한민국에 거주하는 고객의 이름과 주소 전화번호를 검색
	select name, address, phone
	from customer 
	where address like '%한국%';
	
	8)한국에 거주하는 고객이 주문한 도서명을 출력해보기
	단 도서명은 중복 ㄴ
	
	select distinct bookname
	from book b, orders o, customer c
	where c.custid =o.custid and 
	b.bookid = o.bookid and
	address like '%한국%';
	
 9) 굿스포츠 출판사의 도서를 구매한 고객의 이름 출력
 select distinct name 
 from customer c , book b, orders o
 where
 c.custid = o.custid and
 b.bookid = o.bookid and
 publisher ='굿스포츠';
 
 10) 모든 도서의 이름과 가격
 select bookname, price from book;
 
 BOOKNAME              PRICE
-------------------- --------
축구의 역사             7,000
축구아는 여자          13,000
축구의 이해            22,000
골프 바이블            35,000
피겨 교본               8,000
역도 단계별기술         6,000
야구의 추억            20,000
야구를 부탁해          14,000
올림픽 이야기           7,500
Olympic Champions      13,000
	
	**검색할 때 컬럼의 순서를 바꿀 수도 있어요
	select price, bookname from book;
 	**jdbc 연결 프로그램을 할 때는 실행된 sql를 따름
 	
 	
모든 도서의 도서번호, 도서이름 출판사,가격을 검색
select bookid, bookname, publisher, price from book;
 
 
 BOOKID BOOKNAME             PUBLISHER          PRICE
------ -------------------- --------------- --------
     1 축구의 역사          굿스포츠           7,000
     2 축구아는 여자        나무수            13,000
     3 축구의 이해          대한미디어        22,000
     4 골프 바이블          대한미디어        35,000
     5 피겨 교본            굿스포츠           8,000
     6 역도 단계별기술      굿스포츠           6,000
     7 야구의 추억          이상미디어        20,000
     8 야구를 부탁해        이상미디어        14,000
     9 올림픽 이야기        삼성당             7,500
    10 Olympic Champions    Pearson           13,000
  
  select * from book;
  
  BOOKID BOOKNAME             PUBLISHER          PRICE
------ -------------------- --------------- --------
     1 축구의 역사          굿스포츠           7,000
     2 축구아는 여자        나무수            13,000
     3 축구의 이해          대한미디어        22,000
     4 골프 바이블          대한미디어        35,000
     5 피겨 교본            굿스포츠           8,000
     6 역도 단계별기술      굿스포츠           6,000
     7 야구의 추억          이상미디어        20,000
     8 야구를 부탁해        이상미디어        14,000
     9 올림픽 이야기        삼성당             7,500
    10 Olympic Champions    Pearson           13,000
    
    
   도서테이블에 있는 모든 출판사를 검색
   select distinct publisher from book;
   PUBLISHER
---------------
굿스포츠
나무수
대한미디어
이상미디어
삼성당
Pearson


가격이 2만원 미만인 도서검색
select * from book where price<20000;
select * from book where price between 10000 and 20000;

  select * from book where publisher in('굿스포츠','대한미디어');
  select * from book where publisher not in('굿스포츠','대한미디어');
  select * from book where publisher != '굿스포츠' and publisher != '대한미디어' ;
  select * from book where publisher <> '굿스포츠' and publisher<>'대한미디어' ;
  
도서이름에 축구가 포함된 출판사를 검색하시오. 
select bookname, publisher from book where book name like '%축구%';
--------
도서이름의 왼쪽 2번째 위치에 '구'라는 문자열을 갖는 도서를 검색하기
select * from book where bookname like'_구%';

BOOKID BOOKNAME             PUBLISHER          PRICE
------ -------------------- --------------- --------
     1 축구의 역사          굿스포츠           7,000
     2 축구아는 여자        나무수            13,000
     3 축구의 이해          대한미디어        22,000
     7 야구의 추억          이상미디어        20,000
     8 야구를 부탁해        이상미디어        14,000



축구에 관한 도서중에 가격이 2만원이상인 도서
select *from book
where bookname like '%축구%' and
price >=20000;


BOOKID BOOKNAME             PUBLISHER          PRICE
------ -------------------- --------------- --------
     3 축구의 이해          대한미디어        22,000
  

출판사가 굿스포츠 혹은 대한미디어인 도서를 검색
select* from book where publisher ='굿스포츠' or publisher ='대한미디어'; 
 
BOOKID BOOKNAME             PUBLISHER          PRICE
------ -------------------- --------------- --------
     1 축구의 역사          굿스포츠           7,000
     3 축구의 이해          대한미디어        22,000
     4 골프 바이블          대한미디어        35,000
     5 피겨 교본            굿스포츠           8,000
     6 역도 단계별기술      굿스포츠           6,000
 
 도서를 이름순으로 검색
 select * from book order by bookname;
 
 도서를 가격순으로 검색, 가격이 같으면 이름순으로 검색
 select * from book order by price , bookname;
 
 
 도서의 가격을 내림차순으로, 같다면 출판사 순
 select * from book order by price desc, publisher;
 
 
 
 
 고객이 주문한 도서의 총 판매액 구하라
 select sum(saleprice) from orders;
 
 집계함수 -> 한 개만 나올 수가 있음
 sum, avg, max,min, count
 
 
 select bookid, saleprice from orders;(o)
 select bookid, sum(saleprice) from orders;(x)
 
 
 select sum(saleprice) AS 총매출 from orders;  as 애칭주기
  select sum(saleprice) AS "총 매출" from orders; 
 
 
 
 2번 고객이 주문한 도서의 총 판매액을 출력
 select sum(saleprice) from orders where custid=2;
 
 @고객의 이름을 입력받아, 그 고객의 총주문 금액을 출력하는 웹문서 작성
 
 고객이 주문한 도서의 총 판매액, 평균값, 최저가, 최고가를 출력하시오
 select sum(saleprice),avg(saleprice),min(saleprice),max(saleprice) from orders;
 
 @ 서점의 도서 판매 건수를 구하기
 select count(*) from orders;
 
 count(컬럼이름)<---컬럼의이름이 null이 아닌
 count(*)<--모든 레코드수
 
 
 create table dept( 
 dno number primary key,
 dname varchar2(50),
 dloc varchar2(50)
 );
 
 
 create table emp(
 eno number primary key,
 ename varchar2(20),
 dno number references dept(dno),
 salary number,
 comm number,
 hirdate date,
 phone varchar2(20),
 addr varchar2(20),
 mgr number,
 job varchar2(20)
 );
 
 
 insert into dept values(10,'개발1팀','서교동');
 insert into dept values(20,'개발2팀','판교');
 insert into dept values(30,'기획팀','서교동');
 
 
 insert into emp values(1000,'이건우',30,1000,100,'2000/03/03','010-0000-1111','서울',null,'사장');
 insert into emp values(1001,'김수연',10,2000,200,'2020/03/03','010-0000-1112','서울',1000,'부장');
 insert into emp values(1002,'최현호',20,3000,300,'2000/03/03','010-0000-1113','인천',1000,'부장');
 insert into emp values(1003,'윤태인',30,4000,400,'2018/05/11','010-0000-1114','김포',1000,'부장');
 
 insert into emp values(1004,'박지예',10,500,50,'2017/06/03','010-0000-1112','의정부',1001,'과장');
 insert into emp values(1005,'김지현',20,500,50,sysdate,'010-3333-1112','서울',1002,'과장');
 insert into emp values(1006,'김시아',30,600,80,'2016/03/03','010-3333-1113','서울',1003,'과장');
 
 insert into emp values(1007,'유하림',10,400,40,'2021/05/03','010-0000-2112','의정부',1004,'사원');
 insert into emp values(1008,'임하연',10,420,42,'2020/06/03','010-0000-3112','인천',1004,'사원');
 
 insert into emp values(1009,'윤서우',20,500,50,'2021/02/03','010-0000-4112','서울',1005,'사원');
 insert into emp values(1010,'정자영',20,430,43,'2017/01/03','010-0000-5112','서울',1005,'사원');
 
 insert into emp values(1011,'노유나',20,380,38,'2019/08/03','010-0000-1312','인천',1006,'사원');
 insert into emp values(1012,'박성미',20,420,42,'2015/11/03','010-0000-1512','의정부',1006,'사원');
 insert into emp values(1013,'임상진',20,380,38,'2021/03/03','010-0000-1612','의정부',1006,'사원');
 
 
 <개발팀의 평균 급여>
 select avg(salary)
 from dept d, emp e
 where 
 dname like '개발%' and
 e.dno= d.dno;
 
 <기획팀의 사원수>
 select count(*) 
 from emp e, dept d
 where dname='기획팀' and
 e.dno= d.dno;
 
 1<사원의 이름 직위를 출력하기>
	 select ename, job from emp;
 
 2<30번 부서에 근무하는 모든 사원의 이름, 급여, 수당, 실수령액>
	 select ename,salary,comm, salary +comm 
	 from emp
	 where dno=30;
 
 3<사원번호, 이름, 현재급여, 증가된 급여분, 10%인상된 급여를 사원번호 순으로>
 	select eno, ename, salary, salary*0.1 인상액, salary*1.1 인상된급여
	from emp 
	order by eno;
 4<김씨인 모든 사언의 사원이름, 부서번호, 부서명을 출력>
	select ename, d.dno,dname
	 from emp e, dept d
	 where ename like '김%' and
	 e.dno= d.dno;
 5<직위가 사원인 모든 직원들의 최대급여,최소급여, 총급여, 평균급여를 출력> 
 
 
 
 
	select max(salary),min(salary),sum(salary),avg(salary)
	from emp;
	





6<모든 직원의 최대급여와 최소급여의 차이 출력>
	select max(salary)-min(salary)
	from emp;

7<전체 직원들 중에서 직속상관이 있는 직원의 수를 출력하시오>
	select count(*)
	from emp 
	where mgr is not null;

8<사원번호가 1005~1009번 사이의 사원의 이름, 부서번호, 부서명,부서위치>
	select ename, e.dno, dname,dloc
	from emp e, dept d
	where eno>=1004 and eno<=1009 and
	e.dno= d.dno;
	
9<서교동에 근무하는 직원중 직급이 과장인 직원들의 평균급여를 출력하시오>
	select avg(salary)
	from emp e, dept d
	where dloc ='서교동' and job='과장' and
	e.dno = d.dno;
	
10<서교동에 근무하거나 직급이 과장인 직원들의 사원번호, 사원명, 부서번호, 부서명, 부서위치, 직급, 급여, 단 급여가 높은순>
	select eno,ename,e.dno,dname, dloc, job,salary
	from emp e, dept d
	where (dloc='서교동' or job='과장') and
	e.dno= d.dno
	order by salary desc;
	
	
	팀별 연습문제: 부서의 지역명을 입력받아서 그 지역에 근무하는 모든 직원들의 
	사원번호, 이름, 급여, 수당, 실수령액, 부서번호, 부서명을 출력하는 웹문서 작성
	단 부서명순으러 출력하고 동일시에 이름순으로
	
	select eno, ename, salary,comm, salary +comm , e.dno, dname
	from emp e, dept d
	where 
	e.dno= d.dno and
	dloc ='서교동'
	order by dname, ename;
